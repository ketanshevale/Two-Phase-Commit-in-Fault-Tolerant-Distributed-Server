/**
 * Autogenerated by Thrift Compiler (1.0.0-dev)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class StatusReport_ParticipantTPCMMessage implements org.apache.thrift.TBase<StatusReport_ParticipantTPCMMessage, StatusReport_ParticipantTPCMMessage._Fields>, java.io.Serializable, Cloneable, Comparable<StatusReport_ParticipantTPCMMessage> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("StatusReport_ParticipantTPCMMessage");

  private static final org.apache.thrift.protocol.TField TRANSACTION__ID_FIELD_DESC = new org.apache.thrift.protocol.TField("transaction_Id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField STATUS_REPORT__TPCMMESSAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("statusReport_TPCMMessage", org.apache.thrift.protocol.TType.STRING, (short)2);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new StatusReport_ParticipantTPCMMessageStandardSchemeFactory());
    schemes.put(TupleScheme.class, new StatusReport_ParticipantTPCMMessageTupleSchemeFactory());
  }

  public int transaction_Id; // optional
  public String statusReport_TPCMMessage; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    TRANSACTION__ID((short)1, "transaction_Id"),
    STATUS_REPORT__TPCMMESSAGE((short)2, "statusReport_TPCMMessage");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // TRANSACTION__ID
          return TRANSACTION__ID;
        case 2: // STATUS_REPORT__TPCMMESSAGE
          return STATUS_REPORT__TPCMMESSAGE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __TRANSACTION_ID_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.TRANSACTION__ID,_Fields.STATUS_REPORT__TPCMMESSAGE};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.TRANSACTION__ID, new org.apache.thrift.meta_data.FieldMetaData("transaction_Id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.STATUS_REPORT__TPCMMESSAGE, new org.apache.thrift.meta_data.FieldMetaData("statusReport_TPCMMessage", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(StatusReport_ParticipantTPCMMessage.class, metaDataMap);
  }

  public StatusReport_ParticipantTPCMMessage() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public StatusReport_ParticipantTPCMMessage(StatusReport_ParticipantTPCMMessage other) {
    __isset_bitfield = other.__isset_bitfield;
    this.transaction_Id = other.transaction_Id;
    if (other.isSetStatusReport_TPCMMessage()) {
      this.statusReport_TPCMMessage = other.statusReport_TPCMMessage;
    }
  }

  public StatusReport_ParticipantTPCMMessage deepCopy() {
    return new StatusReport_ParticipantTPCMMessage(this);
  }

  @Override
  public void clear() {
    setTransaction_IdIsSet(false);
    this.transaction_Id = 0;
    this.statusReport_TPCMMessage = null;
  }

  public int getTransaction_Id() {
    return this.transaction_Id;
  }

  public StatusReport_ParticipantTPCMMessage setTransaction_Id(int transaction_Id) {
    this.transaction_Id = transaction_Id;
    setTransaction_IdIsSet(true);
    return this;
  }

  public void unsetTransaction_Id() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TRANSACTION_ID_ISSET_ID);
  }

  /** Returns true if field transaction_Id is set (has been assigned a value) and false otherwise */
  public boolean isSetTransaction_Id() {
    return EncodingUtils.testBit(__isset_bitfield, __TRANSACTION_ID_ISSET_ID);
  }

  public void setTransaction_IdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TRANSACTION_ID_ISSET_ID, value);
  }

  public String getStatusReport_TPCMMessage() {
    return this.statusReport_TPCMMessage;
  }

  public StatusReport_ParticipantTPCMMessage setStatusReport_TPCMMessage(String statusReport_TPCMMessage) {
    this.statusReport_TPCMMessage = statusReport_TPCMMessage;
    return this;
  }

  public void unsetStatusReport_TPCMMessage() {
    this.statusReport_TPCMMessage = null;
  }

  /** Returns true if field statusReport_TPCMMessage is set (has been assigned a value) and false otherwise */
  public boolean isSetStatusReport_TPCMMessage() {
    return this.statusReport_TPCMMessage != null;
  }

  public void setStatusReport_TPCMMessageIsSet(boolean value) {
    if (!value) {
      this.statusReport_TPCMMessage = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case TRANSACTION__ID:
      if (value == null) {
        unsetTransaction_Id();
      } else {
        setTransaction_Id((Integer)value);
      }
      break;

    case STATUS_REPORT__TPCMMESSAGE:
      if (value == null) {
        unsetStatusReport_TPCMMessage();
      } else {
        setStatusReport_TPCMMessage((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case TRANSACTION__ID:
      return Integer.valueOf(getTransaction_Id());

    case STATUS_REPORT__TPCMMESSAGE:
      return getStatusReport_TPCMMessage();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case TRANSACTION__ID:
      return isSetTransaction_Id();
    case STATUS_REPORT__TPCMMESSAGE:
      return isSetStatusReport_TPCMMessage();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof StatusReport_ParticipantTPCMMessage)
      return this.equals((StatusReport_ParticipantTPCMMessage)that);
    return false;
  }

  public boolean equals(StatusReport_ParticipantTPCMMessage that) {
    if (that == null)
      return false;

    boolean this_present_transaction_Id = true && this.isSetTransaction_Id();
    boolean that_present_transaction_Id = true && that.isSetTransaction_Id();
    if (this_present_transaction_Id || that_present_transaction_Id) {
      if (!(this_present_transaction_Id && that_present_transaction_Id))
        return false;
      if (this.transaction_Id != that.transaction_Id)
        return false;
    }

    boolean this_present_statusReport_TPCMMessage = true && this.isSetStatusReport_TPCMMessage();
    boolean that_present_statusReport_TPCMMessage = true && that.isSetStatusReport_TPCMMessage();
    if (this_present_statusReport_TPCMMessage || that_present_statusReport_TPCMMessage) {
      if (!(this_present_statusReport_TPCMMessage && that_present_statusReport_TPCMMessage))
        return false;
      if (!this.statusReport_TPCMMessage.equals(that.statusReport_TPCMMessage))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(StatusReport_ParticipantTPCMMessage other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetTransaction_Id()).compareTo(other.isSetTransaction_Id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTransaction_Id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.transaction_Id, other.transaction_Id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatusReport_TPCMMessage()).compareTo(other.isSetStatusReport_TPCMMessage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatusReport_TPCMMessage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.statusReport_TPCMMessage, other.statusReport_TPCMMessage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("StatusReport_ParticipantTPCMMessage(");
    boolean first = true;

    if (isSetTransaction_Id()) {
      sb.append("transaction_Id:");
      sb.append(this.transaction_Id);
      first = false;
    }
    if (isSetStatusReport_TPCMMessage()) {
      if (!first) sb.append(", ");
      sb.append("statusReport_TPCMMessage:");
      if (this.statusReport_TPCMMessage == null) {
        sb.append("null");
      } else {
        sb.append(this.statusReport_TPCMMessage);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class StatusReport_ParticipantTPCMMessageStandardSchemeFactory implements SchemeFactory {
    public StatusReport_ParticipantTPCMMessageStandardScheme getScheme() {
      return new StatusReport_ParticipantTPCMMessageStandardScheme();
    }
  }

  private static class StatusReport_ParticipantTPCMMessageStandardScheme extends StandardScheme<StatusReport_ParticipantTPCMMessage> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, StatusReport_ParticipantTPCMMessage struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // TRANSACTION__ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.transaction_Id = iprot.readI32();
              struct.setTransaction_IdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // STATUS_REPORT__TPCMMESSAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.statusReport_TPCMMessage = iprot.readString();
              struct.setStatusReport_TPCMMessageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, StatusReport_ParticipantTPCMMessage struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetTransaction_Id()) {
        oprot.writeFieldBegin(TRANSACTION__ID_FIELD_DESC);
        oprot.writeI32(struct.transaction_Id);
        oprot.writeFieldEnd();
      }
      if (struct.statusReport_TPCMMessage != null) {
        if (struct.isSetStatusReport_TPCMMessage()) {
          oprot.writeFieldBegin(STATUS_REPORT__TPCMMESSAGE_FIELD_DESC);
          oprot.writeString(struct.statusReport_TPCMMessage);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class StatusReport_ParticipantTPCMMessageTupleSchemeFactory implements SchemeFactory {
    public StatusReport_ParticipantTPCMMessageTupleScheme getScheme() {
      return new StatusReport_ParticipantTPCMMessageTupleScheme();
    }
  }

  private static class StatusReport_ParticipantTPCMMessageTupleScheme extends TupleScheme<StatusReport_ParticipantTPCMMessage> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, StatusReport_ParticipantTPCMMessage struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetTransaction_Id()) {
        optionals.set(0);
      }
      if (struct.isSetStatusReport_TPCMMessage()) {
        optionals.set(1);
      }
      oprot.writeBitSet(optionals, 2);
      if (struct.isSetTransaction_Id()) {
        oprot.writeI32(struct.transaction_Id);
      }
      if (struct.isSetStatusReport_TPCMMessage()) {
        oprot.writeString(struct.statusReport_TPCMMessage);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, StatusReport_ParticipantTPCMMessage struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(2);
      if (incoming.get(0)) {
        struct.transaction_Id = iprot.readI32();
        struct.setTransaction_IdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.statusReport_TPCMMessage = iprot.readString();
        struct.setStatusReport_TPCMMessageIsSet(true);
      }
    }
  }

}

